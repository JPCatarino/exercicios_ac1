library IEEE;
use IEEE.STD_LOGIC_1164.all

entity ControlUnit is
	port(clk				: in  std_logic;
		  reset			: in  std_logic;
		  OpCode			: in  std_logic_vector(5 downto 0);
		  PCWrite		: out std_logic;
		  IRWrite		: out std_logic;
		  IorD			: out std_logic;
		  PCSource		: out std_logic_vector(1 downto 0);
		  RegDest		: out std_logic;
		  PCWriteCond	: out std_logic;
		  MemRead		: out std_logic;
		  MemWrite		: out std_logic;
		  MemToReg		: out std_logic;
		  ALUSelA		: out std_logic;
		  ALUSelB		: out std_logic_vector(1 downto 0);
		  RegWrite		: out std_logic;
		  ALUop			: out	std_logic_vector(1 downto 0));
end ControlUnit;

architecture Behavioral of ControlUnit is
	type TState is (E0, E1, E2, E3, E4, E5, E6, E7, E8, E9, E10, E11);
	signal CS,NS : TState;
	
begin
	-- processo da maquina de estados
	
	process(clk) 
	begin
		if(rising_edge(clk)) then
			if(reset = '1') then
				CS <= E0;
			else
				CS <= NS;
			end if;
		end if;
	end process;
	
	process(CS, OpCode)
	begin
		PCWrite 		<=  '0'; IRWrite  <=  '0'; IorD 	  	<=  '0'; RegDest  <= '0'; 
		PCWriteCond <=  '0'; MemRead  <=  '0'; MemWrite <=  '0'; MemToReg <= '0';
		RegWrite		<=  '0'; PCSource <= "00"; ALUop  	<= "00"; ALUSelA  <= '0';
		ALUSelB 		<= "00";
		NS <= CS;
		
		case CS is
			when E0 =>
				MemRead <= '1'; PCWrite <= '1'; 
	
		  